{"version":3,"sources":["webpack:///./src/app/login/login-page/login.component.css","webpack:///./src/app/login/login-page/login.component.html","webpack:///./src/app/login/login-page/login.component.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/shared/models/login.model.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"\\n.medium-list{\\n  margin: auto;\\n  width: auto;\\n  padding:10px\\n}\\n\\n.list-viewer-wrapper {\\n  border: 1px solid rgba(0, 0, 0, .03);\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .24), 0 0 2px rgba(0, 0, 0, .12);\\n  margin: 20px;\\n}\\n\\n.list-header-title {\\n  color: rgba(0, 0, 0, .54);\\n  background: rgba(0, 0, 0, .03);\\n  padding: 8px 20px;\\n  font-weight: bold;\\n}\\n\\n.form-container {\\n  display: flex;\\n  flex-direction: column; \\n  padding: 20px;\\n  \\n}\\n\\n.form-button {\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;  \\n  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4tcGFnZS9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1g7QUFDRjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxvRUFBb0U7RUFDcEUsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDhCQUE4QjtFQUM5QixpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixhQUFhOztBQUVmOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4tcGFnZS9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWVkaXVtLWxpc3R7XG4gIG1hcmdpbjogYXV0bztcbiAgd2lkdGg6IGF1dG87XG4gIHBhZGRpbmc6MTBweFxufVxuXG4ubGlzdC12aWV3ZXItd3JhcHBlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjAzKTtcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgLjI0KSwgMCAwIDJweCByZ2JhKDAsIDAsIDAsIC4xMik7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLmxpc3QtaGVhZGVyLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuMDMpO1xuICBwYWRkaW5nOiA4cHggMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICBwYWRkaW5nOiAyMHB4O1xuICBcbn1cblxuLmZvcm0tYnV0dG9uIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgIFxuICBcbn0iXX0= */\"","module.exports = \"<div class = \\\"medium-list\\\">\\n    <div class=\\\"list-viewer-wrapper\\\">\\n      <div class=\\\"list-header-title\\\">Log-in</div>\\n        <!-- Error that will display if the entire form is not valid -->\\n      <div *ngIf=\\\"form.errors\\\" class = \\\"alert alert-danger\\\">\\n          User or Password is invalid!\\n      </div>\\n      \\n      <form [formGroup] = \\\"form\\\" (ngSubmit) = \\\"onSubmit()\\\">\\n  \\n        <!-- Username Field -->\\n        <div class=\\\"form-container\\\">\\n          <mat-form-field>\\n  \\n              <!-- Associate key from ts file: username -->\\n              <input \\n                  formControlName = \\\"username\\\"\\n                  matInput\\n                  id=\\\"username\\\" \\n                  type=\\\"email\\\" \\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Hunter Email...\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"username.touched && username.invalid\\\" \\n                class=\\\"alert alert-danger\\\">\\n                <mat-error *ngIf=\\\"username.errors.required\\\">Email is <strong>Required!</strong></mat-error>\\n          </div>\\n        </div>\\n        \\n        <!-- Password Field -->\\n        <div class=\\\"form-container\\\">\\n            <mat-form-field>\\n    \\n                <!-- Associate key from ts file: username -->\\n                <input \\n                    formControlName = \\\"password\\\"\\n                    matInput\\n                    id=\\\"password\\\" \\n                    type=\\\"text\\\" \\n                    class=\\\"form-control\\\"\\n                    placeholder=\\\"Password...\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"password.touched && password.invalid\\\" \\n                  class=\\\"alert alert-danger\\\">\\n                  <mat-error *ngIf=\\\"password.errors.required\\\">Password <strong>Required!</strong></mat-error>\\n            </div>\\n        </div>\\n  \\n          <div class=\\\"form-container\\\">\\n              <button class=\\\"form-button\\\" mat-raised-button color = \\\"primary\\\" type=\\\"submit\\\" [disabled] = \\\"!form.valid\\\">Login</button>\\n              <br>\\n              <button class=\\\"form-button\\\"  mat-raised-button color = \\\"primary\\\" routerLink=\\\"/register\\\">Register</button>\\n          </div>      \\n  \\n      </form>\\n  \\n    </div>\\n  </div>\\n  \\n  \\n  \\n  \\n  \\n  \"","import { UserService } from '../../shared/dbAccess/user.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component , OnInit} from '@angular/core';\nimport {Router } from '@angular/router';\n\n//Material\nimport { MatButtonModule } from '@angular/material/button';\nimport { LogInModel } from 'src/app/shared/models/login.model';\n\n\n\n\n@Component({\n\n  selector: 'app-name-editor',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n \n})\n\n\nexport class LoginComponent implements OnInit {\n \n user: LogInModel;\n  form: FormGroup;\n\n  isLoginError : boolean;\n  constructor(private formBuilder: FormBuilder,\n              private userService : UserService,\n              private router : Router) \n  {\n    this.user = new LogInModel();\n   }\n\n   ngOnInit(){\n      this.form = this.formBuilder.group({\n      username: [this.user.username, \n        [Validators.required\n      ]],\n      password: [this.user.password, [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n  }\n\n  \n  \n\n  onSubmit() {\n\n      this.user = Object.assign({}, this.form.value);\n\n    this.userService.userAuthentication(this.user.username,this.user.password)\n    .subscribe((data : any)=>{\n      \n      if(data.success){\n        //storing json object to localStorage\n        localStorage.setItem('accessToken',data.token);\n        this.router.navigate(['/home']);\n        console.log ( this.user.username + \"  logged-in\"); \n      }\n      else{ \n         alert(data.error);\n         this.router.navigate(['/login']);\n    }; \n      return;\n      \n    });\n    \n  }\n\n  get username(){\n    return this.form.get('username');\n  }\n  \n  get password(){\n    return this.form.get('password');\n  }\n\n  \n}\n//testuser1@myhunter.cuny.edu ","import { LoginComponent } from './login-page/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n      path: '',\n      component: LoginComponent\n    }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { LoginComponent } from './login-page/login.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule\n    \n  ]\n})\nexport class LoginModule { }\n","export class LogInModel {\n    username    ?: string;\n    password    ?: string;\n}"],"sourceRoot":""}
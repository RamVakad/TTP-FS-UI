{"version":3,"sources":["webpack:///./src/app/register/register-page/register.component.css","webpack:///./src/app/register/register-page/register.component.html","webpack:///./src/app/register/register-page/register.component.ts","webpack:///./src/app/register/register-routing.module.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/shared/models/register.model.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["module.exports = \"\\n.medium-list{\\n  margin: auto;\\n  width: auto;\\n  padding:10px\\n}\\n\\n.list-viewer-wrapper {\\n  border: 1px solid rgba(0, 0, 0, .03);\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .24), 0 0 2px rgba(0, 0, 0, .12);\\n  margin: 20px;\\n}\\n\\n.list-header-title {\\n  color: rgba(0, 0, 0, .54);\\n  background: rgba(0, 0, 0, .03);\\n  padding: 8px 20px;\\n  font-weight: bold;\\n}\\n\\n.form-container {\\n  display: flex;\\n  flex-direction: column; \\n  padding: 20px;\\n  \\n}\\n\\n.form-button {\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;  \\n  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1g7QUFDRjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxvRUFBb0U7RUFDcEUsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDhCQUE4QjtFQUM5QixpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixhQUFhOztBQUVmOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWVkaXVtLWxpc3R7XG4gIG1hcmdpbjogYXV0bztcbiAgd2lkdGg6IGF1dG87XG4gIHBhZGRpbmc6MTBweFxufVxuXG4ubGlzdC12aWV3ZXItd3JhcHBlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjAzKTtcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgLjI0KSwgMCAwIDJweCByZ2JhKDAsIDAsIDAsIC4xMik7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLmxpc3QtaGVhZGVyLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuMDMpO1xuICBwYWRkaW5nOiA4cHggMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICBwYWRkaW5nOiAyMHB4O1xuICBcbn1cblxuLmZvcm0tYnV0dG9uIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgIFxuICBcbn0iXX0= */\"","module.exports = \"<div class = \\\"medium-list\\\">\\n  <div class=\\\"list-viewer-wrapper\\\">\\n    <div class=\\\"list-header-title\\\">Register</div>\\n      <!-- Error that will display if the entire form is not valid -->\\n    <div *ngIf=\\\"form.errors\\\" class = \\\"alert alert-danger\\\">\\n        User or Password is invalid!\\n    </div>\\n    \\n    <form [formGroup] = \\\"form\\\" (ngSubmit) = \\\"onSubmit()\\\">\\n\\n      <!-- Username Field -->\\n      <div class=\\\"form-container\\\">\\n        <mat-form-field>\\n\\n            <!-- Associate key from ts file: username -->\\n            <input \\n                formControlName = \\\"username\\\"\\n                matInput\\n                id=\\\"username\\\" \\n                type=\\\"email\\\" \\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Hunter Email...\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"username.touched && username.invalid\\\" \\n              class=\\\"alert alert-danger\\\">\\n              <mat-error *ngIf=\\\"username.errors.required\\\">Email is <strong>Required!</strong></mat-error>\\n        </div>\\n      </div>\\n      \\n      <!-- Password Field -->\\n      <div class=\\\"form-container\\\">\\n          <mat-form-field>\\n  \\n              <!-- Associate key from ts file: username -->\\n              <input \\n                  formControlName = \\\"password\\\"\\n                  matInput\\n                  id=\\\"password\\\" \\n                  type=\\\"text\\\" \\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Password...\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"password.touched && password.invalid\\\" \\n                class=\\\"alert alert-danger\\\">\\n                <mat-error *ngIf=\\\"password.errors.required\\\">Password <strong>Required!</strong></mat-error>\\n          </div>\\n      </div>\\n\\n      <!-- Confirm Password Field -->\\n      <div class=\\\"form-container\\\">\\n          <mat-form-field>\\n  \\n              <!-- Associate key from ts file: username -->\\n              <input \\n                  formControlName = \\\"password2\\\"\\n                  matInput\\n                  id=\\\"password2\\\" \\n                  type=\\\"text\\\" \\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Confirm Password...\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"password2.touched && password2.invalid\\\" \\n                class=\\\"alert alert-danger\\\">\\n                <mat-error *ngIf=\\\"password2.errors.required\\\">Password <strong>Required!</strong></mat-error>\\n          </div>\\n      </div>\\n\\n        <div class=\\\"form-container\\\">\\n            <button class=\\\"form-button\\\" mat-raised-button color = \\\"primary\\\" type=\\\"submit\\\" [disabled] = \\\"!form.valid\\\">Register</button>\\n            <br>\\n            <button class=\\\"form-button\\\"  mat-raised-button color = \\\"primary\\\" routerLink=\\\"/login\\\">Login</button>\\n        </div>      \\n\\n    </form>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\"","import { UserService } from '../../shared/dbAccess/user.service';\nimport { Component , OnInit} from '@angular/core';\nimport {Router } from '@angular/router';\nimport { RegisterModel } from '../../shared/models/register.model';\n\n//Needed to implement Reactive Forms\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  \n  user: RegisterModel;\n  form: FormGroup;\n\n  isRegiError : boolean;\n  constructor(\n    private userService : UserService,\n    private router : Router,\n    private formBuilder: FormBuilder) \n    {\n      this.user = new RegisterModel();\n     }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n       username: [this.user.username, [\n        Validators.required\n      ]],\n       password: [this.user.password, [\n        Validators.required,\n        Validators.minLength(6)\n      ]], \n       password2: [this.user.password2, [\n        Validators.required,\n        Validators.minLength(6)\n      ]] \n\n    });\n    }\n  \n  onSubmit() {\n\n    this.user = Object.assign({}, this.form.value);\n    \n    if(this.user.password != this.user.password2){\n      alert(\"Password did not matche!\");\n    }\n    else\n    {\n      this.userService.registerUser(this.user.username , this.user.password)\n      .subscribe((data: any)  =>{\n            console.log ( data );\n            //storing json object to localStorage\n            localStorage.setItem('accessToken',data.token);\n\n            if(data.success){\n\n              this.router.navigate(['/home']);\n              console.log ( this.user.username + \" registered\"); \n            }\n            else{ \n                alert(data.error);\n                this.router.navigate(['/register']);\n            };\n        });\n    }\n}\n\n\nget username(){\n  return this.form.get('username');\n}\n\nget password(){\n  return this.form.get('password');\n}\n\nget password2(){\n  return this.form.get('password2');\n}\n\n\n\n}","import { RegisterComponent } from './register-page/register.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register-page/register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    ReactiveFormsModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule\n\n  ]\n})\nexport class RegisterModule { }\n","export class RegisterModel {\n    username: String = '';\n    password: String = '';\n    password2: String = '';\n}"],"sourceRoot":""}